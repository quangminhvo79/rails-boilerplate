# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.4

        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 5432:5432

      redis:
        image: redis

        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Ruby
      # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
      # change this to (see https://github.com/ruby/setup-ruby#versioning):
      # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: 3.1.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Bundle Install
        run: |
          gem install bundler --version 2.4.12
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Create Database
        env:
          RAILS_ENV: test
        run: |
          cp .env.example .env
          bundle exec rails db:create db:migrate

      - name: Run test
        run: |
          bundle exec rails tailwindcss:build
          bundle exec rspec spec/ -f p
